plot(data$Id, data$steps, type = "line")
plot(data$steps, type = "line")
imputed <- data.frame(data)
View(imputed)
for(i in 1:nrow(data)){
if(is.na(imputed[i, "steps"])){
imputed[i, "steps"] <- data %>%
do(filter(., complete.cases(.))) %>%
filter(interval == imputed[i, "interval"]) %>%
group_by(interval) %>%
summarise(steps = mean(steps))
}
}
warnings()
data %>%
do(filter(., complete.cases(.))) %>%
filter(interval == imputed[i, "interval"]) %>%
group_by(interval) %>%
summarise(steps = mean(steps)) %>%
select(steps)
View(averages)
data %>%
do(filter(., complete.cases(.))) %>%
filter(interval == 0) %>%
group_by(interval) %>%
summarise(steps = mean(steps)) %>%
select(steps)
data %>%
do(filter(., complete.cases(.))) %>%
filter(interval == 5) %>%
group_by(interval) %>%
summarise(steps = mean(steps)) %>%
select(steps)
View(averages)
imputed <- data.frame(data)
for(i in 1:nrow(data)){
if(is.na(imputed[i, "steps"])){
imputed[i, "steps"] <- data %>%
do(filter(., complete.cases(.))) %>%
filter(interval == imputed[i, "interval"]) %>%
group_by(interval) %>%
summarise(steps = mean(steps)) %>%
select(steps)
}
}
View(imputed)
sum(is.na(imputed))
imputed <- data.frame(data)
sum(is.na(imputed))
for(i in 1:nrow(data)){
if(is.na(imputed[i, "steps"])){
imputed[i, "steps"] <- data %>%
do(filter(., complete.cases(.))) %>%
filter(interval == imputed[i, "interval"]) %>%
group_by(interval) %>%
summarise(steps = mean(steps)) %>%
select(steps)
}
}
imputedTotals <- imputed %>%
do(filter(., complete.cases(.))) %>%
group_by(date) %>%
summarise(steps = sum(steps))
hist(
x = imputedTotals$steps,
main = "Histogram of Total Number of Steps per Day (Imputed)",
xlab = "Steps per Day (Imputed")
imputedMeanSteps <- mean(imputedTotals$steps)
imputedMedianSteps <- median(imputedTotals$steps)
View(data)
View(totals)
View(imputedTotals)
?weekdays
weekdays(imputed$date)
weekdays(imputed[1, "date"])
weekdays(as.date(imputed[1, "date"]))
weekdays(as.Date(imputed[1, "date"]))
for(i in 1:nrow(imputed)){
weekdays(as.Date(imputed[i, "date"]))}
for(i in 1:nrow(imputed)){
print(weekdays(as.Date(imputed[i, "date"])))}
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% c("Saturday", "Sunday") {
print("Weekend")
}
else
{
print("Weekday")
}
}
}
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% c("Saturday", "Sunday")) {
print("Weekend")
}
else
{
print("Weekday")
}
}
}
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% c("Saturday", "Sunday")) {
imputed$type = "Weekend"
}
else
{
imputed$type = "Weekday"
}
}
}
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% c("Saturday", "Sunday")) {
imputed$type = "Weekend"
}
else
{
imputed$type = "Weekday"
}
}
weekends = c("Saturday", "Sunday")
View(imputed)
class(imputed$type)
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) {
imputed$type = as.factor("Weekend")
}
else {
imputed$type = as.factor("Weekday")
}
}
View(imputed)
class(imputed$type)
imputedAverages <- imputed %>%
group_by(interval) %>%
summarise(steps = mean(steps))
View(imputedAverages)
View(averages)
qplot(
x = interval,
y = steps,
data = imputedAverges,
facets = . ~ type,
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
# Load ggplot2 library
library(ggplot2)
# Create plot
qplot(
x = interval,
y = steps,
data = imputedAverges,
facets = . ~ type,
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
qplot(
x = interval,
y = steps,
data = imputedAverages,
facets = . ~ type,
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
qplot(
x = interval,
y = steps,
data = imputedAverages,
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
?qplot
qplot(
x = interval,
y = steps,
data = imputedAverages,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
qplot(
x = interval,
y = steps,
data = imputedAverages,
facets = . ~ type,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
View(imputedAverages)
imputedAverages <- imputed %>%
group_by(interval) %>%
summarise(steps = mean(steps))
# Get average steps by interval
imputedAverages <- imputed %>%
group_by(type, interval) %>%
summarise(steps = mean(steps))
View(imputedAverages)
qplot(
x = interval,
y = steps,
data = imputed,
facets = . ~ type,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
imputedAverages <- imputed %>%
group_by(interval, type) %>%
summarise(steps = mean(steps))
imputedAverages <- imputed %>%
group_by(interval, type) %>%
summarise(steps = mean(steps)) %>%
order_by(interval, type)
imputedAverages <- imputed %>%
group_by(interval, type) %>%
summarise(steps = mean(steps)) %>%
arrange(interval, type)
qplot(
x = interval,
y = steps,
data = imputed,
facets = . ~ type,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
qplot(
x = interval,
y = steps,
data = imputed,
facets = type ~ .,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
View(imputedAverages)
View(imputedAverages)
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) print "yes" else "no" }
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) print("yes") else print("no") }
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) {
imputed$type = "Weekend"
}
else {
imputed$type = "Weekday"
}
}
View(imputedAverages)
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) {
print("Weekend")
}
else {
print("Weekday")
}
}
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) {
imputed[i, "type"] = "Weekend"
}
else {
imputed[i, "type"] = "Weekday"
}
}
View(imputedAverages)
View(imputed)
View(imputed)
# Copy raw data
imputed <- data.frame(data)
# Impute missing values using average daily steps
for(i in 1:nrow(imputed)){
if(is.na(imputed[i, "steps"])){
imputed[i, "steps"] <- data %>%
do(filter(., complete.cases(.))) %>%
filter(interval == imputed[i, "interval"]) %>%
group_by(interval) %>%
summarise(steps = mean(steps)) %>%
select(steps)
}
}
View(imputed)
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) {
print("Weekend")
}
else {
print("Weekday")
}
}
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) {
imputed[i, "type"] = "Weekend"
}
else {
imputed[i, "type"] = "Weekday"
}
}
View(imputed)
summary(imputed)
summary(imputed$type)
distinct(imputed$type)
unique(imputed$type)
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) {
imputed[i, "type"] = as.factor("Weekend")
}
else {
imputed[i, "type"] = as.factor("Weekday")
}
}
unique(imputed$type)
summary(imputed$type)
# Copy raw data
imputed <- data.frame(data)
# Impute missing values using average daily steps
for(i in 1:nrow(imputed)){
if(is.na(imputed[i, "steps"])){
imputed[i, "steps"] <- data %>%
do(filter(., complete.cases(.))) %>%
filter(interval == imputed[i, "interval"]) %>%
group_by(interval) %>%
summarise(steps = mean(steps)) %>%
select(steps)
}
}
# Add a factor variable for type of day
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) {
imputed[i, "type"] = as.factor("Weekend")
}
else {
imputed[i, "type"] = as.factor("Weekday")
}
}
warnings()
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) {
imputed[i, "type"] = "Weekend"
}
else {
imputed[i, "type"] = "Weekday"
}
}
# Copy raw data
imputed <- data.frame(data)
# Impute missing values using average daily steps
for(i in 1:nrow(imputed)){
if(is.na(imputed[i, "steps"])){
imputed[i, "steps"] <- data %>%
do(filter(., complete.cases(.))) %>%
filter(interval == imputed[i, "interval"]) %>%
group_by(interval) %>%
summarise(steps = mean(steps)) %>%
select(steps)
}
}
# Add a factor variable for type of day
for(i in 1:nrow(imputed)){
if (weekdays(as.Date(imputed[i, "date"])) %in% weekends) {
imputed[i, "type"] = "Weekend"
}
else {
imputed[i, "type"] = "Weekday"
}
}
unique(imputed$type)
imputed$type <- as.factor(imputed$type)
unique(imputed$type)
# Get average steps by interval
imputedAverages <- imputed %>%
group_by(interval, type) %>%
summarise(steps = mean(steps)) %>%
arrange(interval, type)
qplot(
x = interval,
y = steps,
data = imputed,
facets = . ~ type,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
qplot(
x = interval,
y = steps,
data = imputed,
facets = type ~ .,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)")
qplot(
x = interval,
y = steps,
data = imputed,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)") + facet_wrap(~type, ncol=1)
imputedAverages <- imputed %>%
group_by(interval, type) %>%
summarise(steps = mean(steps)) %>%
arrange(interval, type)
qplot(
x = interval,
y = steps,
data = imputed,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)") + facet_wrap(~type, ncol=1)
View(imputedAverages)
imputedAverages <- imputed %>%
group_by(interval, type) %>%
summarise(steps = mean(steps)) %>%
arrange(type, interval)
qplot(
x = interval,
y = steps,
data = imputed,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Steps (imputed)") + facet_wrap(~type, ncol=1)
View(imputedAverages)
qplot(
x = interval,
y = steps,
data = imputed,
geom = "path",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Number of Steps (imputed)") +
facet_wrap(~type, ncol=1)
library(lattice)
xyplot(
steps~interval|type
data = imputed,
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Number of Steps (imputed)")
xyplot(
steps~interval|type,
data = imputed,
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Number of Steps (imputed)")
xyplot(
steps~interval|type,
data = imputed,
type = "l",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Number of Steps (imputed)"),
layout=c(1,2)
xyplot(
steps~interval|type,
data = imputed,
type = "l",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Number of Steps (imputed)",
layout=c(1,2))
View(imputedAverages)
# Get average steps by interval
imputedAverages <- imputed %>%
group_by(interval, type) %>%
summarise(steps = mean(steps)) %>%
filter(interval < 100)
arrange(type, interval)
# Get average steps by interval
imputedAverages <- imputed %>%
group_by(interval, type) %>%
summarise(steps = mean(steps)) %>%
filter(interval < 100) %>%
arrange(type, interval)
xyplot(
steps~interval|type,
data = imputed,
type = "l",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Number of Steps (imputed)",
layout=c(1,2))
xyplot(
steps~interval|type,
data = imputedAverages,
type = "l",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Number of Steps (imputed)",
layout=c(1,2))
imputedAverages <- imputed %>%
group_by(interval, type) %>%
summarise(steps = mean(steps)) %>%
arrange(type, interval)
xyplot(
steps~interval|type,
data = imputedAverages,
type = "l",
main = "Average Steps by 5-Minute Interval",
xlab = "5-minute Interval",
ylab = "Number of Steps (imputed)",
layout=c(1,2))
?knit2html
library(knitr)
knit2html("PA1_template.Rmd")
For our strategy to impute missing values, we will use the average value across all days for the corresponding missing 5-minute interval.
